from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from sqlalchemy import select

from bot.core import dp
from bot.db.decorators import session_decorator
from bot.db.models import Town, User
from bot.kb.user import get_main_user_menu, get_towns_list
from bot.states.user import UserRegisterState

success_msg = """
üè´ –©–æ –ø—Ä–∞—Ü—é—î –≤ –º—ñ—Å—Ç—ñ?
–¢—É—Ç —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ç–µ, –¥–µ –∫—É–ø–∏—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç–∏, –ª—ñ–∫–∏, —ó–∂—É –¥–ª—è –≤–∞—à–æ–≥–æ –∫–æ—Ç–∏–∫–∞, –¥–µ –∑–∞–ø—Ä–∞–≤–∏—Ç–∏ –º–∞—à–∏–Ω—É, –∑–Ω—è—Ç–∏ –∫–æ—à—Ç–∏ —Ç–∞ –ø—Ä–æ —ñ–Ω—à—ñ –≤—ñ–¥–∫—Ä–∏—Ç—ñ –∑–∞–∫–ª–∞–¥–∏ —É –≤–∞—à–æ–º—É –º—ñ—Å—Ç—ñ.
–Ø–∫—â–æ –≤–∏ –±–∞–∂–∞—î—Ç–µ –¥–æ–¥–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é, –ø–∏—à—ñ—Ç—å –Ω–∞–º: @sumka_feedback_bot

üÜò –ï–∫—Å—Ç—Ä–µ–Ω–∞ —Å–∏—Ç—É–∞—Ü—ñ—è
–¢—Ä–µ–±–∞ –ø–æ–¥–∑–≤–æ–Ω–∏—Ç–∏ –≤ –µ–∫—Å—Ç—Ä–µ–Ω—ñ —Å–ª—É–∂–±–∏ –∞–±–æ –∑–Ω–∞–π—Ç–∏ –±–æ—Ç, –∫—É–¥–∏ —Å–∫–∏–Ω—É—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø–µ—Ä–µ—Å—É–≤–∞–Ω–Ω—è –≤–æ—Ä–æ–∂–æ—ó —Ç–µ—Ö–Ω—ñ–∫–∏? –¶–µ–π —Ä–æ–∑–¥—ñ–ª –≤–∞–º –¥–æ–ø–æ–º–æ–∂–µ, –≤—ñ–Ω –Ω–∞ –≤–∞—Ä—Ç—ñ –≤–∞—à–æ—ó –±–µ–∑–ø–µ–∫–∏.

üíü –ü—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞
–ü–æ—á—É—Ç—Ç—è —Ç—Ä–∏–≤–æ–≥–∏, –Ω–µ–≤–∏–∑–Ω–∞—á–µ–Ω–æ—Å—Ç—ñ, —Å—Ç—Ä–∞—Ö—É —É –≤–∞—Å –∞–±–æ —É –≤–∞—à–∏—Ö –±–ª–∏–∑—å–∫–∏—Ö? –ú–∏ –∑—Ä–æ–±–∏–ª–∏ –¥–æ–±—ñ—Ä–∫—É –∫–æ—Ä–∏—Å–Ω–∏—Ö —Ä–µ—Å—É—Ä—Å—ñ–≤, —è–∫—ñ –¥–æ–ø–æ–º–æ–∂—É—Ç—å —è–∫ –¥–æ—Ä–æ—Å–ª–∏–º —Ç–∞–∫ —ñ –¥—ñ—Ç–∫–∞–º. –¢—É—Ä–±—É–π—Ç–µ—Å—å –ø—Ä–æ —Å–µ–±–µ, –±–æ –≤–∏ —Ü—å–æ–≥–æ –≤–∞—Ä—Ç—ñ!

‚úÖ–û—Ñ—ñ—Ü—ñ–π–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
–ù–∞–¥—Ç–æ –±–∞–≥–∞—Ç–æ –∫–∞–Ω–∞–ª—ñ–≤ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º—ñ —ñ —Ö—Ç–æ–∑–Ω–∞, –¥–µ –ø–∏—à—É—Ç—å –ø—Ä–∞–≤–¥—É —ñ –∫–æ–º—É –≤—ñ—Ä–∏—Ç–∏? –¶—è –¥–æ–±—ñ—Ä–∫–∞ –º—ñ—Å—Ç–∏—Ç—å –ª–∏—à–µ –æ—Ñ—ñ—Ü—ñ–π–Ω—ñ –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω—ñ –¥–∂–µ—Ä–µ–ª–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó, —è–∫—ñ –∑–∞—Ö–∏—Å—Ç—è—Ç—å –≤–∞—Å –≤—ñ–¥ –¥–µ–∑—ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó, —Ñ–µ–π–∫—ñ–≤ —Ç–∞ –ø—Ä–æ–ø–∞–≥–∞–Ω–¥–∏. –ß–∏—Ç–∞–π—Ç–µ –ª–∏—à–µ –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω–µ.

üöô –ï–≤–∞–∫—É–∞—Ü—ñ—è
–ü–ª–∞–Ω—É—î—Ç–µ –≤–∏—ó—Ö–∞—Ç–∏ –∑ –º—ñ—Å—Ç–∞ –∞–±–æ –£–∫—Ä–∞—ó–Ω–∏? –®—É–∫–∞—î—Ç–µ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –±–µ–∑–ø–µ—á–Ω—ñ –º–∞—Ä—à—Ä—É—Ç–∏ —Ç–∞ –∫–æ—Ä–∏—Å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –µ–≤–∞–∫—É–∞—Ü—ñ—é? –°–º—ñ–ª–∏–≤–æ –∫–æ—Ä–∏—Å—Ç—É–π—Ç–µ—Å—å —Ü–∏–º–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º–∏, —è–∫—ñ –¥–æ–ø–æ–º–æ–∂—É—Ç—å –≤–∞–º —Å–ø–ª–∞–Ω—É–≤–∞—Ç–∏ –±–µ–∑–ø–µ—á–Ω—É –µ–≤–∞–∫—É–∞—Ü—ñ—é.

üíôüíõ –î–æ–ø–æ–º–æ–≥–∞
–•–æ—á–µ—Ç–µ –¥–æ–ø–æ–º–æ–≥—Ç–∏ –≤—ñ–π—Å—å–∫–æ–≤–∏–º? –ó–¥–∞—Ç–∏ –∫—Ä–æ–≤? –®—É–∫–∞—î—Ç–µ —Ä–µ–∫–≤—ñ–∑–∏—Ç–∏ –Ω–∞–¥—ñ–π–Ω–∏—Ö –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ–π, —â–æ–± –ø–µ—Ä–µ—Ä–∞—Ö—É–≤–∞—Ç–∏ –∫–æ—à—Ç–∏? –ê–±–æ –∂ –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–∞ –≥—É–º–∞–Ω—ñ—Ç–∞—Ä–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞? –¶–µ–π —Ä–æ–∑–¥—ñ–ª –±—É–¥–µ –∫–æ—Ä–∏—Å–Ω–∏–º —ñ —Ç–∏–º, —Ö—Ç–æ —Ö–æ—á–µ –¥–æ–ø–æ–º–æ–≥—Ç–∏ —ñ —Ç–∏–º, —Ö—Ç–æ –ø–æ—Ç—Ä–µ–±—É—î –¥–æ–ø–æ–º–æ–≥–∏. –†–∞–¥–∏–º–æ ¬´–ø—Ä–æ–≥—É–ª—è—Ç–∏—Å—è¬ª —Ü–∏–º —Ä–æ–∑–¥—ñ–ª–æ–º, —â–æ–± –∫—Ä–∞—â–µ –ø–æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—è –∑ –Ω–∏–º.

üì¢ –¢—Ä–∏–≤–æ–≥–∞
–î–µ —Ç–æ–π –¥–æ–¥–∞—Ç–æ–∫, —â–æ —Å–ø–æ–≤—ñ—â–∞—î –ø—Ä–æ —Å–∏—Ä–µ–Ω—É? –î–µ –±–µ–∑–ø–µ—á–Ω–æ —Ö–æ–≤–∞—Ç–∏—Å—è –ø—ñ–¥ —á–∞—Å —Ç—Ä–∏–≤–æ–≥–∏? –©–æ –º–∞—î –±—É—Ç–∏ —É —Ç—Ä–∏–≤–æ–∂–Ω—ñ–π –≤–∞–ª—ñ–∑—Ü—ñ? –¶–µ–π —Ä–æ–∑–¥—ñ–ª –≤–º—ñ—â—É—î –∫–æ—Ä–∏—Å–Ω—ñ –ø–æ—Ä–∞–¥–∏: –¥—ñ–π —É —Ä–∞–∑—ñ —Ö—ñ–º—ñ—á–Ω–æ—ó –∞—Ç–∞–∫–∏, –≤—Ç—Ä–∞—Ç–∏ –∑–≤‚Äô—è–∑–∫—É —Ç–∞ –Ω–µ —Ç—ñ–ª—å–∫–∏. –£—Å—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –∑—ñ–±—Ä–∞–Ω–∞ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ –¥–ª—è –≤–∞—Å –≤ —Ü—å–æ–º—É —Ä–æ–∑–¥—ñ–ª—ñ.

üíå –ó–≤–æ—Ä–æ—Ç–Ω—ñ–π –∑–≤‚Äô—è–∑–æ–∫
–°–ø–æ–¥—ñ–≤–∞—î–º–æ—Å—è, —â–æ –Ω–∞—à –±–æ—Ç —Å—Ç–∞–≤ –¥–ª—è –≤–∞—Å –∫–æ—Ä–∏—Å–Ω–∏–º –ø–æ–º—ñ—á–Ω–∏–∫–æ–º. –Ø–∫—â–æ —É –≤–∞—Å —î –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó, —â–æ –¥–æ–¥–∞—Ç–∏, –∑–º—ñ–Ω–∏—Ç–∏ –∞–±–æ –∂ –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è –≤—Ä–∞–∂–µ–Ω–Ω—è–º–∏ –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è, —Ç–æ –ø–∏—à—ñ—Ç—å –Ω–∞–º
"""


@dp.message_handler(commands=["start"], state="*")
@session_decorator(add_param=True)
async def start(current_session, msg: types.Message, state: FSMContext):
    user = await User.get(msg.from_user.id)

    if user:
        await msg.answer(
            "–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ", reply_markup=await get_main_user_menu(user.town_id)
        )
    else:
        await User.create(
            id=msg.from_user.id,
            name=msg.from_user.full_name,
            user_name=msg.from_user.username,
        )
        query = select(Town).order_by(Town.rating.desc(), Town.id)
        towns = (await current_session.execute(query)).scalars().all()

        await UserRegisterState.wait_town.set()
        await msg.answer(
            "–û–±–µ—Ä—ñ—Ç—å –≤–∞—à–µ –º—ñ—Å—Ü–µ –ø—Ä–æ–∂–∏–≤–∞–Ω–Ω—è", reply_markup=get_towns_list(towns)
        )


@dp.message_handler(Text(equals="‚öô –ó–º—ñ–Ω–∏—Ç–∏ –º—ñ—Å—Ü–µ –ø—Ä–æ–∂–∏–≤–∞–Ω–Ω—è"))
@session_decorator(add_param=True)
async def change_user_town(current_session, msg: types.Message, state: FSMContext):
    query = select(Town).order_by(Town.rating.desc(), Town.id)
    towns = (await current_session.execute(query)).scalars().all()

    # towns = await Town.get_list()
    await UserRegisterState.wait_town.set()
    await msg.answer(
        "–û–±–µ—Ä—ñ—Ç—å –≤–∞—à–µ –º—ñ—Å—Ü–µ –ø—Ä–æ–∂–∏–≤–∞–Ω–Ω—è", reply_markup=get_towns_list(towns)
    )


@dp.message_handler(state=UserRegisterState.wait_town)
@session_decorator(add_param=False)
async def assign_user_to_town(msg: types.Message, state: FSMContext):
    user = await User.get(None, id=msg.from_user.id)
    town = await Town.get(None, name=msg.text)
    if not town:
        return await msg.answer(
            "–ù–∞–∂–∞–ª—å —Ü—å–æ–≥–æ –º—ñ—Å—Ç–∞ –Ω–µ–º–∞ –≤ –ø–µ—Ä–µ–ª—ñ–∫—É, —Å–ø—Ä–æ–±—É–π—Ç–µ –æ–±—Ä–∞—Ç–∏ –º—ñ—Å—Ç–æ –Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—ñ –≤–Ω–∏–∑—É —â–µ —Ä–∞–∑"
        )
    await user.update(town_id=town.id)
    await msg.answer(success_msg, reply_markup=(await get_main_user_menu(town.id)))
    await state.finish()
